{"ts":1361396520350,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1361397900231,"patch":[[{"diffs":[[1,"//   The stringify function translates an object into a JSON-string, where\n// functions are represented like strings too.\n//\n// example: stringify({a:0,b:function(){return 0;}}); \n//          returns '{\"a\":0,\"b\":\"function(){return 0;}\"}'\n\nfunction stringify(c) {\n    var b = {};\n    if(typeof(c)!=\"object\"){return(c.toString());};\n    for(var i in c) {\n        if(typeof(c[i])==\"object\") b[i]=_translate(c[i]);\n        if(typeof(c[i])==\"function\") {\n            b[i]=c[i].toString();\n        } else {\n            if(typeof(c[i])==\"object\") {\n                b[i]=_translate(c[i]);\n            } else {\n                b[i]=c[i];\n            }\n        };\n    }\n    return(b);\n}\n\nfunction _translate(c) {\n    var b = {}\n    for(var i in c) {\n        if(typeof(c[i])==\"function\") {\n            b[i]=c[i].toString();\n        } else {\n            if(typeof(c[i])==\"object\") {\n                b[i]=_translate(c[i]);\n            } else {\n                b[i]=c[i];\n            }\n        };\n    }\n    return b;\n}\n\n//  The objectify function creates an object from a JSON-string, where strings\n//  like '\"a\":\"function(){return 0;}\"' become a real functions.\n//\n// example: objectify('{\"a\":0,\"b\":\"function(){return 0;}\"}'); \n//          returns an object: {a:0,b:function(){return 0;}}\n\nfunction objectify(c) {\n    var b = {};\n    for(var i in c) {\n        if(typeof(c[i])==\"object\"){b[i]=objectify(c[i])} else {\n            if(typeof(c[i])==\"string\") {\n                if(c[i].indexOf(\"function\")===0){ //TODO\n                    b[i]=Function(c[i].substring(c[i].indexOf(\"(\")+1,c[i].indexOf(\")\")).split(\",\"),c[i].substring(c[i].indexOf(\"{\")+1,c[i].length-1));\n                } else {\n                    b[i] = c[i];\n                }\n            } else {\n                b[i] = c[i];\n            }\n        }\n    }\n    return b;\n}"]],"start1":0,"start2":0,"length1":0,"length2":1823}]],"length":1823,"saved":false}
{"ts":1361397992469,"patch":[[{"diffs":[[0,"r(var i in c) {\n"],[1,"        if(typeof(c[i])==\"object\") b[i]=_translate(c[i]);\n"],[0,"        if(typeo"]],"start1":724,"start2":724,"length1":32,"length2":90}]],"length":1881,"saved":false}
{"ts":1361398219846,"patch":[[{"diffs":[[0,"=\"object\") b[i]="],[-1,"_"],[0,""],[1,""],[0,"translate(c[i]);"]],"start1":377,"start2":377,"length1":33,"length2":32},{"diffs":[[0,"           b[i]="],[-1,"_"],[0,""],[1,""],[0,"translate(c[i]);"]],"start1":546,"start2":546,"length1":33,"length2":32},{"diffs":[[0,"(b);\n}\n\n"],[1,"//  The translate function just makes string-representations of object's functions.\n\n"],[0,"function"]],"start1":668,"start2":668,"length1":16,"length2":101},{"diffs":[[0,"unction "],[-1,"_"],[0,"translat"]],"start1":762,"start2":762,"length1":17,"length2":16},{"diffs":[[0,"ject\") b[i]="],[-1,"_"],[0,"translate(c["]],"start1":850,"start2":850,"length1":25,"length2":24},{"diffs":[[0,"[i]="],[-1,"_"],[0,""],[1,""],[0,"tran"]],"start1":1027,"start2":1027,"length1":9,"length2":8}]],"length":1961,"saved":false}
{"ts":1361398668766,"patch":[[{"diffs":[[0,"{};\n"],[-1,"    if(typeof(c)!=\"object\"){return(c.toString());};\n"],[0,"    "]],"start1":275,"start2":275,"length1":60,"length2":8},{"diffs":[[0," return("],[-1,"b"],[1,"JSON.stringify(b)"],[0,");\n}\n\n//"]],"start1":609,"start2":609,"length1":17,"length2":33}]],"length":1925,"saved":false}
{"contributors":[],"silentsave":false,"ts":1361421601557,"patch":[[{"diffs":[[0,"     }\n    }\n    return b;\n}"],[1,"\n\n// Test\n\nvar a = {b: 0, c: 'hello', d: function(){console.log('This is the function');}}\nobjectify(stringify(a)).d();\n\n\n\n"]],"start1":1897,"start2":1897,"length1":28,"length2":151}]],"length":2048,"saved":false}
{"ts":1361421626066,"patch":[[{"diffs":[[0,"on');}}\n"],[1,"console.log(stringify(d));\n"],[0,"objectif"]],"start1":2008,"start2":2008,"length1":16,"length2":43}]],"length":2075,"saved":false}
{"ts":1361421635090,"patch":[[{"diffs":[[0,"ringify("],[-1,"d"],[1,"a"],[0,"));\nobje"]],"start1":2030,"start2":2030,"length1":17,"length2":17}]],"length":2075,"saved":false}
{"ts":1361421822484,"patch":[[{"diffs":[[0,"   }\n    return "],[-1,"b"],[1,"(JSON.parse(b))"],[0,";\n}\n\n// Test\n\nva"]],"start1":1905,"start2":1905,"length1":33,"length2":47}]],"length":2089,"saved":false}
{"ts":1361421879441,"patch":[[{"diffs":[[0,"rn ("],[-1,"JSON.parse(b)"],[1,"b"],[0,");\n}"]],"start1":1918,"start2":1918,"length1":21,"length2":9},{"diffs":[[0,"fy(a));\n"],[1,"JSON.parse("],[0,"objectif"]],"start1":2037,"start2":2037,"length1":16,"length2":27},{"diffs":[[0,"gify(a))"],[1,")"],[0,".d();\n\n\n"]],"start1":2071,"start2":2071,"length1":16,"length2":17}]],"length":2089,"saved":false}
{"ts":1361422285653,"patch":[[{"diffs":[[0,"));\n"],[-1,"JSON.parse("],[0,"obje"]],"start1":2041,"start2":2041,"length1":19,"length2":8},{"diffs":[[0,"ringify("],[1,"JSON.parse("],[0,"a))).d()"]],"start1":2057,"start2":2057,"length1":16,"length2":27}]],"length":2089,"saved":false}
{"ts":1361422319556,"patch":[[{"diffs":[[0,"jectify("],[-1,"stringify("],[0,"JSON.par"]],"start1":2047,"start2":2047,"length1":26,"length2":16},{"diffs":[[0,"ON.parse"],[1,"(stringify"],[0,"(a))).d("]],"start1":2057,"start2":2057,"length1":16,"length2":26}]],"length":2089,"saved":false}
{"ts":1361422519508,"patch":[[{"diffs":[[0,"og('"],[-1,"This is the "],[1,"1/ Test passed');}};\nvar e = {f: 0, g: 'hello', h: {i:{j:"],[0,"function"],[-1,"');}}\n"],[1,"(){"],[0,"cons"]],"start1":1988,"start2":1988,"length1":34,"length2":76},{"diffs":[[0,"ole.log("],[1,"'2/ Test passed');}}}};\nobjectify(JSON.parse("],[0,"stringif"]],"start1":2064,"start2":2064,"length1":16,"length2":61},{"diffs":[[0,"gify(a))"],[1,").d()"],[0,";\nobject"]],"start1":2122,"start2":2122,"length1":16,"length2":21},{"diffs":[[0,"parse(stringify("],[-1,"a"],[1,"e"],[0,"))).d();\n\n\n\n"]],"start1":2152,"start2":2152,"length1":29,"length2":29},{"diffs":[[0,".d();\n\n\n"],[-1,"\n"]],"start1":2172,"start2":2172,"length1":9,"length2":8}]],"length":2180,"saved":false}
{"ts":1361422538976,"patch":[[{"diffs":[[0,"ingify(e)))."],[-1,"d"],[1,"h.i.j"],[0,"();\n\n\n"]],"start1":2161,"start2":2161,"length1":19,"length2":23}]],"length":2184,"saved":false}
{"ts":1361422634805,"patch":[[{"diffs":[[0,"\n// Test"],[1,"s"],[0,"\n\nvar a "]],"start1":1928,"start2":1928,"length1":16,"length2":17},{"diffs":[[0,"o', d: function("],[1,"d"],[0,"){console.log('1"]],"start1":1962,"start2":1962,"length1":32,"length2":33},{"diffs":[[0," Test passed"],[-1,"'"],[1," - ' + d"],[0,");}};\nvar e "]],"start1":1996,"start2":1996,"length1":25,"length2":32},{"diffs":[[0,"unction("],[1,"a,b,c"],[0,"){consol"]],"start1":2059,"start2":2059,"length1":16,"length2":21},{"diffs":[[0,"t passed"],[-1,"'"],[1," - ' + d"],[0,");}}}};\n"]],"start1":2093,"start2":2093,"length1":17,"length2":24},{"diffs":[[0,"(a))).d("],[1,"Date()"],[0,");\nobjec"]],"start1":2147,"start2":2147,"length1":16,"length2":22},{"diffs":[[0,").h.i.j("],[1,"Date()"],[0,");\n\n\n"]],"start1":2198,"start2":2198,"length1":13,"length2":19}]],"length":2217,"saved":false}
{"ts":1361422644775,"patch":[[{"diffs":[[0,"ion("],[-1,"a,b,c"],[1,"d"],[0,"){co"]],"start1":2063,"start2":2063,"length1":13,"length2":9}]],"length":2213,"saved":false}
{"ts":1361422654566,"patch":[[{"diffs":[[0,".log('1/"],[1,"2"],[0," Test pa"]],"start1":1988,"start2":1988,"length1":16,"length2":17},{"diffs":[[0,".log('2/"],[1,"2"],[0," Test pa"]],"start1":2078,"start2":2078,"length1":16,"length2":17}]],"length":2215,"saved":false}
{"ts":1361423011630,"patch":[[{"diffs":[[0," Tests\n\n"],[1,"function performTests() {\n    "],[0,"var a = "]],"start1":1931,"start2":1931,"length1":16,"length2":46},{"diffs":[[0," d);}};\n"],[1,"    "],[0,"var e = "]],"start1":2045,"start2":2045,"length1":16,"length2":20},{"diffs":[[0,");}}}};\n"],[1,"    "],[0,"objectif"]],"start1":2141,"start2":2141,"length1":16,"length2":20},{"diffs":[[0,"ate());\n"],[1,"    "],[0,"objectif"]],"start1":2192,"start2":2192,"length1":16,"length2":20},{"diffs":[[0,"ate());\n"],[1,"}"],[0,"\n\n"]],"start1":2247,"start2":2247,"length1":10,"length2":11}]],"length":2258,"saved":false}
