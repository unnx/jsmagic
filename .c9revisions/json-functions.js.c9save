{"ts":1361396520350,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1361397900231,"patch":[[{"diffs":[[1,"//   The stringify function translates an object into a JSON-string, where\n// functions are represented like strings too.\n//\n// example: stringify({a:0,b:function(){return 0;}}); \n//          returns '{\"a\":0,\"b\":\"function(){return 0;}\"}'\n\nfunction stringify(c) {\n    var b = {};\n    if(typeof(c)!=\"object\"){return(c.toString());};\n    for(var i in c) {\n        if(typeof(c[i])==\"object\") b[i]=_translate(c[i]);\n        if(typeof(c[i])==\"function\") {\n            b[i]=c[i].toString();\n        } else {\n            if(typeof(c[i])==\"object\") {\n                b[i]=_translate(c[i]);\n            } else {\n                b[i]=c[i];\n            }\n        };\n    }\n    return(b);\n}\n\nfunction _translate(c) {\n    var b = {}\n    for(var i in c) {\n        if(typeof(c[i])==\"function\") {\n            b[i]=c[i].toString();\n        } else {\n            if(typeof(c[i])==\"object\") {\n                b[i]=_translate(c[i]);\n            } else {\n                b[i]=c[i];\n            }\n        };\n    }\n    return b;\n}\n\n//  The objectify function creates an object from a JSON-string, where strings\n//  like '\"a\":\"function(){return 0;}\"' become a real functions.\n//\n// example: objectify('{\"a\":0,\"b\":\"function(){return 0;}\"}'); \n//          returns an object: {a:0,b:function(){return 0;}}\n\nfunction objectify(c) {\n    var b = {};\n    for(var i in c) {\n        if(typeof(c[i])==\"object\"){b[i]=objectify(c[i])} else {\n            if(typeof(c[i])==\"string\") {\n                if(c[i].indexOf(\"function\")===0){ //TODO\n                    b[i]=Function(c[i].substring(c[i].indexOf(\"(\")+1,c[i].indexOf(\")\")).split(\",\"),c[i].substring(c[i].indexOf(\"{\")+1,c[i].length-1));\n                } else {\n                    b[i] = c[i];\n                }\n            } else {\n                b[i] = c[i];\n            }\n        }\n    }\n    return b;\n}"]],"start1":0,"start2":0,"length1":0,"length2":1823}]],"length":1823,"saved":false}
{"ts":1361397992469,"patch":[[{"diffs":[[0,"r(var i in c) {\n"],[1,"        if(typeof(c[i])==\"object\") b[i]=_translate(c[i]);\n"],[0,"        if(typeo"]],"start1":724,"start2":724,"length1":32,"length2":90}]],"length":1881,"saved":false}
{"ts":1361398219846,"patch":[[{"diffs":[[0,"=\"object\") b[i]="],[-1,"_"],[0,""],[1,""],[0,"translate(c[i]);"]],"start1":377,"start2":377,"length1":33,"length2":32},{"diffs":[[0,"           b[i]="],[-1,"_"],[0,""],[1,""],[0,"translate(c[i]);"]],"start1":546,"start2":546,"length1":33,"length2":32},{"diffs":[[0,"(b);\n}\n\n"],[1,"//  The translate function just makes string-representations of object's functions.\n\n"],[0,"function"]],"start1":668,"start2":668,"length1":16,"length2":101},{"diffs":[[0,"unction "],[-1,"_"],[0,"translat"]],"start1":762,"start2":762,"length1":17,"length2":16},{"diffs":[[0,"ject\") b[i]="],[-1,"_"],[0,"translate(c["]],"start1":850,"start2":850,"length1":25,"length2":24},{"diffs":[[0,"[i]="],[-1,"_"],[0,""],[1,""],[0,"tran"]],"start1":1027,"start2":1027,"length1":9,"length2":8}]],"length":1961,"saved":false}
